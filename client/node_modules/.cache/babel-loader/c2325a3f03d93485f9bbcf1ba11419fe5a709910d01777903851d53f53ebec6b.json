{"ast":null,"code":"var _jsxFileName = \"/Users/arpandas/Documents/reactjs/vthacks/src/pages/Record.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Record.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [videoUri, setVideoUri] = useState(null);\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const navigate = useNavigate();\n  const startRecording = async () => {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoRef.current.srcObject = stream;\n      videoRef.current.play();\n      setRecording(true);\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      const chunks = [];\n      mediaRecorder.ondataavailable = event => {\n        chunks.push(event.data);\n      };\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(chunks, {\n          type: \"video/mp4\"\n        });\n        setVideoUri(URL.createObjectURL(blob));\n      };\n      mediaRecorder.start();\n    }\n  };\n  const stopRecording = () => {\n    const stream = videoRef.current.srcObject;\n    if (stream) {\n      const tracks = stream.getTracks();\n      tracks.forEach(track => track.stop());\n    }\n    setRecording(false);\n    const recordedBlob = new Blob([stream], {\n      type: \"video/mp4\"\n    });\n    setVideoUri(URL.createObjectURL(recordedBlob));\n    console.log(videoUri);\n  };\n  const handleUpload = () => {\n    // Handle video upload here\n  };\n  const handlePlay = () => {\n    if (videoUri) {\n      navigate('/video-playback', {\n        state: {\n          videoUri\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"record-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"video\",\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: startRecording,\n        children: \"Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: stopRecording,\n        style: {\n          backgroundColor: \"red\"\n        },\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), videoUri && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handlePlay,\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), videoUri && /*#__PURE__*/_jsxDEV(\"video\", {\n      src: videoUri,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Record, \"vOuZWc9LuopovlxVx/riU9i+10A=\", false, function () {\n  return [useNavigate];\n});\n_c = Record;\nexport default Record;\nvar _c;\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","jsxDEV","_jsxDEV","Record","_s","recording","setRecording","videoUri","setVideoUri","videoRef","mediaRecorderRef","navigate","startRecording","navigator","mediaDevices","getUserMedia","stream","video","current","srcObject","play","mediaRecorder","MediaRecorder","chunks","ondataavailable","event","push","data","onstop","blob","Blob","type","URL","createObjectURL","start","stopRecording","tracks","getTracks","forEach","track","stop","recordedBlob","console","log","handleUpload","handlePlay","state","className","children","ref","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","src","controls","_c","$RefreshReg$"],"sources":["/Users/arpandas/Documents/reactjs/vthacks/src/pages/Record.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Record.css\";\n\nconst Record = () => {\n  const [recording, setRecording] = useState(false);\n  const [videoUri, setVideoUri] = useState(null);\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const navigate = useNavigate();\n\n  const startRecording = async () => {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      videoRef.current.srcObject = stream;\n      videoRef.current.play();\n      setRecording(true);\n\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n\n      const chunks = [];\n      mediaRecorder.ondataavailable = (event) => {\n        chunks.push(event.data);\n      };\n\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(chunks, { type: \"video/mp4\" });\n        setVideoUri(URL.createObjectURL(blob));\n      };\n\n      mediaRecorder.start();\n    }\n};\n\n  const stopRecording = () => {\n    const stream = videoRef.current.srcObject;\n    if (stream) {\n      const tracks = stream.getTracks();\n      tracks.forEach(track => track.stop());\n    }\n    setRecording(false);\n\n    const recordedBlob = new Blob([stream], { type: \"video/mp4\" });\n    setVideoUri(URL.createObjectURL(recordedBlob));\n    console.log(videoUri);\n  };\n\n  const handleUpload = () => {\n    // Handle video upload here\n  };\n\n  const handlePlay = () => {\n    if (videoUri) {\n      navigate('/video-playback', { state: { videoUri } });\n    }\n  };\n\n  return (\n    <div className=\"record-container\">\n      <video ref={videoRef} className=\"video\" autoPlay />\n      <div className=\"controls\">\n        <button className=\"button\" onClick={startRecording}>Record</button>\n        <button className=\"button\" onClick={stopRecording} style={{ backgroundColor: \"red\" }}>Stop</button>\n        <button className=\"button\" onClick={handleUpload}>Upload</button>\n        {videoUri && <button className=\"button\" onClick={handlePlay}>Play</button>}\n      </div>\n      {videoUri && <video src={videoUri} controls />}\n    </div>\n  );\n};\n\nexport default Record;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}