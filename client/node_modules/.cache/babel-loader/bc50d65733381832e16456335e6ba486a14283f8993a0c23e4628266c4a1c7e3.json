{"ast":null,"code":"var _jsxFileName = \"/Users/arpandas/Documents/reactjs/vthacks/client/src/pages/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FIREBASE_AUTH } from \"../FirebaseConfig\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const auth = FIREBASE_AUTH;\n  const handleRegistration = async () => {\n    if (password !== passwordConfirm) {\n      setError(\"Passwords do not match.\");\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    try {\n      // Create a new user\n      const response = await createUserWithEmailAndPassword(auth, email, password);\n      alert(\"Registration successful!\");\n      navigate(\"/record\");\n    } catch (err) {\n      console.error(err);\n      setError(\"Registration failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: passwordConfirm,\n      onChange: e => setPasswordConfirm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegistration,\n      disabled: loading,\n      children: loading ? \"Registering...\" : \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"cu3P6cHNToL2yNWi6PqGLXgaLo0=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","FIREBASE_AUTH","createUserWithEmailAndPassword","jsxDEV","_jsxDEV","Register","_s","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","loading","setLoading","error","setError","navigate","auth","handleRegistration","response","alert","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/arpandas/Documents/reactjs/vthacks/client/src/pages/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FIREBASE_AUTH } from \"../FirebaseConfig\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport \"./Auth.css\";\n\nconst Register = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const auth = FIREBASE_AUTH;\n\n  const handleRegistration = async () => {\n    if (password !== passwordConfirm) {\n      setError(\"Passwords do not match.\");\n      setLoading(false);\n      return;\n    }\n\n    setLoading(true);\n    setError(\"\");\n\n    try {\n      // Create a new user\n      const response = await createUserWithEmailAndPassword(\n        auth,\n        email,\n        password\n      );\n      alert(\"Registration successful!\");\n      navigate(\"/record\");\n    } catch (err) {\n      console.error(err);\n      setError(\"Registration failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <h1>Register</h1>\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Confirm Password\"\n        value={passwordConfirm}\n        onChange={(e) => setPasswordConfirm(e.target.value)}\n      />\n      {error && <p>{error}</p>}\n      <button\n        onClick={handleRegistration}\n        disabled={loading}\n      >\n        {loading ? \"Registering...\" : \"Register\"}\n      </button>\n    </div>\n  );\n};\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}