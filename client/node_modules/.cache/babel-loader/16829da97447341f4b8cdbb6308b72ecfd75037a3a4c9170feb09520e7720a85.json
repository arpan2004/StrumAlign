{"ast":null,"code":"var _jsxFileName = \"/Users/arpandas/Documents/reactjs/vthacks/client/src/pages/Record.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./Record.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [videoUri, setVideoUri] = useState(null);\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const startRecording = async () => {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoRef.current.srcObject = stream;\n      videoRef.current.play();\n      setRecording(true);\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      const chunks = [];\n      mediaRecorder.ondataavailable = event => {\n        chunks.push(event.data);\n      };\n      mediaRecorder.onstop = async () => {\n        const blob = new Blob(chunks, {\n          type: \"video/mp4\"\n        });\n        setVideoUri(URL.createObjectURL(blob));\n\n        // Upload the video to the server\n        const formData = new FormData();\n        formData.append(\"file\", blob, \"video.mp4\");\n        try {\n          const response = await axios.post(\"http://localhost:5000/process-video\", formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\"\n            }\n          });\n\n          // Handle the response, e.g., save the processed video URI\n          if (response.status === 200) {\n            // Assuming response.data is the URL of the processed video\n            const processedVideoUri = URL.createObjectURL(new Blob([response.data], {\n              type: \"video/mp4\"\n            }));\n            setVideoUri(processedVideoUri);\n          }\n        } catch (error) {\n          console.error(\"Error uploading video:\", error);\n        }\n      };\n      mediaRecorder.start();\n    }\n  };\n  const stopRecording = () => {\n    const stream = videoRef.current.srcObject;\n    if (stream) {\n      const tracks = stream.getTracks();\n      tracks.forEach(track => track.stop());\n    }\n    setRecording(false);\n\n    // Update the videoUri to show the recorded video\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"record-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"video\",\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: startRecording,\n        children: \"Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: stopRecording,\n        style: {\n          backgroundColor: \"red\"\n        },\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), videoUri && /*#__PURE__*/_jsxDEV(\"video\", {\n      src: videoUri,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Record, \"dMfXgPITQWX7a1Fqk8WSUW9qFXk=\");\n_c = Record;\nexport default Record;\nvar _c;\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","Record","_s","recording","setRecording","videoUri","setVideoUri","videoRef","mediaRecorderRef","startRecording","navigator","mediaDevices","getUserMedia","stream","video","current","srcObject","play","mediaRecorder","MediaRecorder","chunks","ondataavailable","event","push","data","onstop","blob","Blob","type","URL","createObjectURL","formData","FormData","append","response","post","headers","status","processedVideoUri","error","console","start","stopRecording","tracks","getTracks","forEach","track","stop","className","children","ref","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","src","controls","_c","$RefreshReg$"],"sources":["/Users/arpandas/Documents/reactjs/vthacks/client/src/pages/Record.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./Record.css\";\n\nconst Record = () => {\n  const [recording, setRecording] = useState(false);\n  const [videoUri, setVideoUri] = useState(null);\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n\n  const startRecording = async () => {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      videoRef.current.srcObject = stream;\n      videoRef.current.play();\n      setRecording(true);\n\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n\n      const chunks = [];\n      mediaRecorder.ondataavailable = (event) => {\n        chunks.push(event.data);\n      };\n\n      mediaRecorder.onstop = async () => {\n        const blob = new Blob(chunks, { type: \"video/mp4\" });\n        setVideoUri(URL.createObjectURL(blob));\n\n        // Upload the video to the server\n        const formData = new FormData();\n        formData.append(\"file\", blob, \"video.mp4\");\n\n        try {\n          const response = await axios.post(\"http://localhost:5000/process-video\", formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          });\n\n          // Handle the response, e.g., save the processed video URI\n          if (response.status === 200) {\n            // Assuming response.data is the URL of the processed video\n            const processedVideoUri = URL.createObjectURL(new Blob([response.data], { type: \"video/mp4\" }));\n            setVideoUri(processedVideoUri);\n          }\n        } catch (error) {\n          console.error(\"Error uploading video:\", error);\n        }\n      };\n\n      mediaRecorder.start();\n    }\n  };\n\n  const stopRecording = () => {\n    const stream = videoRef.current.srcObject;\n    if (stream) {\n      const tracks = stream.getTracks();\n      tracks.forEach((track) => track.stop());\n    }\n    setRecording(false);\n\n    // Update the videoUri to show the recorded video\n  };\n\n  return (\n    <div className=\"record-container\">\n      <video ref={videoRef} className=\"video\" autoPlay />\n      <div className=\"controls\">\n        <button className=\"button\" onClick={startRecording}>Record</button>\n        <button className=\"button\" onClick={stopRecording} style={{ backgroundColor: \"red\" }}>Stop</button>\n      </div>\n      {videoUri && <video src={videoUri} controls />}\n    </div>\n  );\n};\n\nexport default Record;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMW,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMW,gBAAgB,GAAGX,MAAM,CAAC,IAAI,CAAC;EAErC,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAIC,SAAS,CAACC,YAAY,IAAID,SAAS,CAACC,YAAY,CAACC,YAAY,EAAE;MACjE,MAAMC,MAAM,GAAG,MAAMH,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEE,KAAK,EAAE;MAAK,CAAC,CAAC;MACzEP,QAAQ,CAACQ,OAAO,CAACC,SAAS,GAAGH,MAAM;MACnCN,QAAQ,CAACQ,OAAO,CAACE,IAAI,CAAC,CAAC;MACvBb,YAAY,CAAC,IAAI,CAAC;MAElB,MAAMc,aAAa,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;MAC/CL,gBAAgB,CAACO,OAAO,GAAGG,aAAa;MAExC,MAAME,MAAM,GAAG,EAAE;MACjBF,aAAa,CAACG,eAAe,GAAIC,KAAK,IAAK;QACzCF,MAAM,CAACG,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;MACzB,CAAC;MAEDN,aAAa,CAACO,MAAM,GAAG,YAAY;QACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACP,MAAM,EAAE;UAAEQ,IAAI,EAAE;QAAY,CAAC,CAAC;QACpDtB,WAAW,CAACuB,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAAC;;QAEtC;QACA,MAAMK,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,EAAE,WAAW,CAAC;QAE1C,IAAI;UACF,MAAMQ,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,IAAI,CAAC,qCAAqC,EAAEJ,QAAQ,EAAE;YACjFK,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CAAC,CAAC;;UAEF;UACA,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;YAC3B;YACA,MAAMC,iBAAiB,GAAGT,GAAG,CAACC,eAAe,CAAC,IAAIH,IAAI,CAAC,CAACO,QAAQ,CAACV,IAAI,CAAC,EAAE;cAAEI,IAAI,EAAE;YAAY,CAAC,CAAC,CAAC;YAC/FtB,WAAW,CAACgC,iBAAiB,CAAC;UAChC;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAChD;MACF,CAAC;MAEDrB,aAAa,CAACuB,KAAK,CAAC,CAAC;IACvB;EACF,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAM7B,MAAM,GAAGN,QAAQ,CAACQ,OAAO,CAACC,SAAS;IACzC,IAAIH,MAAM,EAAE;MACV,MAAM8B,MAAM,GAAG9B,MAAM,CAAC+B,SAAS,CAAC,CAAC;MACjCD,MAAM,CAACE,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;IACzC;IACA3C,YAAY,CAAC,KAAK,CAAC;;IAEnB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKgD,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BjD,OAAA;MAAOkD,GAAG,EAAE3C,QAAS;MAACyC,SAAS,EAAC,OAAO;MAACG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDvD,OAAA;MAAKgD,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBjD,OAAA;QAAQgD,SAAS,EAAC,QAAQ;QAACQ,OAAO,EAAE/C,cAAe;QAAAwC,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnEvD,OAAA;QAAQgD,SAAS,EAAC,QAAQ;QAACQ,OAAO,EAAEd,aAAc;QAACe,KAAK,EAAE;UAAEC,eAAe,EAAE;QAAM,CAAE;QAAAT,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChG,CAAC,EACLlD,QAAQ,iBAAIL,OAAA;MAAO2D,GAAG,EAAEtD,QAAS;MAACuD,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACrD,EAAA,CAxEID,MAAM;AAAA4D,EAAA,GAAN5D,MAAM;AA0EZ,eAAeA,MAAM;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}